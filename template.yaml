AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  lifthus serverless microservices

Globals:
  Function:
    Timeout: 30
    MemorySize: 128
    Tracing: Active
    Environment:
      Variables:
        # * Environment variables
        # deployment : Parameter Store
        # local : env.json
        # native : .env
        GOOGLE_CLIENT_ID: "{{resolve:ssm:GOOGLE_CLIENT_ID:1}}"
        LIFTHUS_AUTH_DB_NAME: "{{resolve:ssm:LIFTHUS_AUTH_DB_NAME:1}}"
        LIFTHUS_AUTH_DB_PASSWORD: "{{resolve:ssm:LIFTHUS_AUTH_DB_PASSWORD:1}}"
        LIFTHUS_AUTH_DB_USER: "{{resolve:ssm:LIFTHUS_AUTH_DB_USER:1}}"
        LIFTHUS_AUTH_DB_HOST: "{{resolve:ssm:LIFTHUS_AUTH_DB_HOST:1}}"
        LIFTHUS_AUTH_DB_PORT: "{{resolve:ssm:LIFTHUS_AUTH_DB_PORT:1}}"

        LIFTHUS_POST_DB_URL: "{{resolve:ssm:LIFTHUS_POST_DB_URL:1}}"
        LIFTHUS_POST_DB_NAME: "{{resolve:ssm:LIFTHUS_POST_DB_NAME:1}}"
        LIFTHUS_POST_DB_USER: "{{resolve:ssm:LIFTHUS_POST_DB_USER:1}}"
        LIFTHUS_POST_DB_PASSWORD: "{{resolve:ssm:LIFTHUS_POST_DB_PASSWORD:1}}"
        LIFTHUS_POST_DB_HOST: "{{resolve:ssm:LIFTHUS_POST_DB_HOST:1}}"
        LIFTHUS_POST_DB_PORT: "{{resolve:ssm:LIFTHUS_POST_DB_PORT:1}}"

        HUS_SECRET_KEY: "{{resolve:ssm:HUS_SECRET_KEY:1}}"
        GOENV: "{{resolve:ssm:GOENV:1}}"
  Api:
    Cors:
      AllowOrigin: "'*'"
      AllowHeaders: "'*'"
      AllowMethods: "'*'"
      MaxAge: "'43200'"
    TracingEnabled: true

Resources:
  # auth services ==================================================
  LifthusAuthApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Name: LifthusAuthApi
      Domain:
        DomainName: "auth.lifthus.com"
        CertificateArn: "{{resolve:ssm:CLOUDHUS_ACM_ARN:1}}"
        EndpointConfiguration: REGIONAL
        Route53:
          HostedZoneId: "{{resolve:ssm:LIFTHUS_HOSTED_ZONE_ID:1}}"
          RecordName: "auth.lifthus.com"
  LifthusAuthService:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: services/lifthus-auth/
      Handler: lifthus-auth
      Runtime: go1.x
      Architectures:
        - x86_64
      Events:
        LifthusAuthServiceRoot:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: LifthusAuthApi
            Path: "/auth"
            Method: ANY
        LifthusAuthServiceProxy:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: LifthusAuthApi
            Path: /auth/{proxy+}
            Method: ANY
        # * VPC applied well but outbound request from Lambda not working so this prop is commented out
        #VpcConfig:
        #   SubnetIds: # subnet for lambda function
        #     - "{{resolve:ssm:US_WEST_2A_SUBNET_ID:1}}"
        #   SecurityGroupIds: # security group for lambda function
        #     - "{{resolve:ssm:CLOUDHUS_SG_ID:1}}"

  # lifthus api ==================================================
  LifthusApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Name: LifthusApi
      Domain:
        DomainName: "api.lifthus.com"
        CertificateArn: "{{resolve:ssm:CLOUDHUS_ACM_ARN:1}}"
        EndpointConfiguration: REGIONAL
        Route53:
          HostedZoneId: "{{resolve:ssm:LIFTHUS_HOSTED_ZONE_ID:1}}"
  # lifthus post service
  LifthusPostService:
    Type: AWS::Serverless::Function
    Properties:
      # !! SAM esbuild (not working properly)
      #CodeUri: services/post/
      #Handler: src/lambda.handler
      # SAM tsc esbuild bundle
      CodeUri: services/post/dist-bundle/
      Handler: lambda.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Events:
        LifthusPostServiceRoot:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: LifthusApi
            Path: /post
            Method: ANY
        LifthusPostServiceProxy:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: LifthusApi
            Path: /post/{proxy+}
            Method: ANY
    # SAM esbuild (not working properly)
    # Metadata:
    #   BuildMethod: esbuild
    #   BuildProperties:
    #     EntryPoints:
    #       - src/lambda.ts
    #     Format: "cjs"
    #     Minify: false
    #     # OutExtension:
    #     #   - .js=.mjs
    #     Target: "es2017"
    #     Sourcemap: false
    #     External:
    #       - "@nestjs/microservices"
    #       - "@nestjs/websockets"
    #       - "cache-manager"
    #       - "class-transformer"
    #       - "class-validator"

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Join:
          - ""
          - - ApplicationInsights-SAM-
            - Ref: AWS::StackName
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Fn::Join:
          - ""
          - - ApplicationInsights-SAM-
            - Ref: AWS::StackName
      AutoConfigurationEnabled: "true"
    DependsOn: ApplicationResourceGroup
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  LifthusAuthApi:
    Description: Lifthus auth api endpoint base url
    Value: "https://auth.lifthus.com/auth"
  LifthusApi:
    Description: Lifthus api endpoint base url
    Value: "https://api.lifthus.com"
